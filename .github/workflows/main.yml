name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - run: echo "${{ github.event.head_commit.message }}"
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  Update-VPS-server:
    runs-on: ubuntu-latest
    needs: Explore-GitHub-Actions
    steps:
      - run: echo "üöÄ This job is triggered after the Explore-GitHub-Actions job."
      - run: echo "üîë The ${{ secrets.VPS_HOST }} server is now being updated."
      - run: echo "üíª The ${{ secrets.VPS_USER }} user is updating the server."
      - run: echo "üîí The ${{ secrets.VPS_WORK_KEY }} password is used to authenticate."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_WORK_KEY }}" > ~/.ssh/id_work_seminar
          chmod 600 ~/.ssh/id_work_seminar
      - name: Copy deploy script and run it on server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_WORK_KEY }}
          source: ".github/scripts/update_server.sh"
          target: "/tmp"
      - name: SSH to server and run deploy script
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_WORK_KEY }}
          script: |
            chmod +x /tmp/update_server.sh
            /tmp/update_server.sh
      - run: echo "üõ†Ô∏è The server is being updated with the latest code changes."